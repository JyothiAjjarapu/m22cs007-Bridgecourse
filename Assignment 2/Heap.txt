What is a heap?

A heap is a special Tree-based data structure in which the tree is a complete binary tree.

Complete binary tree:

 A complete binary tree is a binary tree in which all the levels are 
completely filled except possibly the lowest one, which is filled from the left.

Heaps are two types:
1. Max Heap - In a Max-Heap, the key present in the root node should be greatest among all the 
keys of its children nodes. Same property applies recursively for all the nodes.

2. Min Heap - In a Max-Heap, the key present in the root node should be smallest among all the 
keys of its children nodes. Same property applies recursively for all the nodes.


Deletion in a heap:- 

Deleting an element from heap is nothing but deleting the root node from the heap and re-arrange
 all the nodes to form a heap.

How deletion works.

Hence to delete an element from a heap, we delete the last element and put the last element value
as root's key and rearrange the heap. In this way, the root value is replaced with last element
value and last element is deleted.

1. Replace the root key with the last element's key.
2. Delete the last element.
3. Since now the last element is now placed at root position, the heap now doesnt follow the heap
property and hence we need to re-arrange(Heapify) the whole heap.

In general, heap can be represented as an array.

[10, 5, 3, 2, 4]
This array is nothing but 
    10's children are 5 and 3
    5's children are 2 and 4
    3 doesn't have children
    2 doesnt have children
    4 doesn't have children.
Lets follow a Max-Heap.

